{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../../api/axiosInstance\";\n\n// Fetch comments for a post\nexport const fetchCommentsByPost = createAsyncThunk(\"comments/fetchByPost\", async (postId, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await API.get(`/comments/${postId}`);\n    return {\n      postId,\n      comments: data\n    };\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to load comments\");\n  }\n});\n\n// Add a comment\nexport const addComment = createAsyncThunk(\"comments/add\", async ({\n  postId,\n  text\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await API.post(`/comments/${postId}`, {\n      text\n    });\n    return {\n      postId,\n      comment: data\n    };\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to add comment\");\n  }\n});\nconst commentSlice = createSlice({\n  name: \"comments\",\n  initialState: {\n    byPost: {},\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchCommentsByPost.pending, state => {\n      state.loading = true;\n    }).addCase(fetchCommentsByPost.fulfilled, (state, action) => {\n      state.loading = false;\n      state.byPost[action.payload.postId] = action.payload.comments;\n    }).addCase(fetchCommentsByPost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(addComment.fulfilled, (state, action) => {\n      const {\n        postId,\n        comment\n      } = action.payload;\n      if (!state.byPost[postId]) state.byPost[postId] = [];\n      state.byPost[postId].unshift(comment);\n    });\n  }\n});\nexport default commentSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","fetchCommentsByPost","postId","rejectWithValue","data","get","comments","err","_err$response","_err$response$data","response","message","addComment","text","post","comment","_err$response2","_err$response2$data","commentSlice","name","initialState","byPost","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","unshift","reducer"],"sources":["C:/Users/srish/OneDrive/Desktop/build project/niche-community-platform/frontend/src/features/comment/commentSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../../api/axiosInstance\";\r\n\r\n// Fetch comments for a post\r\nexport const fetchCommentsByPost = createAsyncThunk(\r\n  \"comments/fetchByPost\",\r\n  async (postId, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await API.get(`/comments/${postId}`);\r\n      return { postId, comments: data };\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data?.message || \"Failed to load comments\");\r\n    }\r\n  }\r\n);\r\n\r\n// Add a comment\r\nexport const addComment = createAsyncThunk(\r\n  \"comments/add\",\r\n  async ({ postId, text }, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await API.post(`/comments/${postId}`, { text });\r\n      return { postId, comment: data };\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data?.message || \"Failed to add comment\");\r\n    }\r\n  }\r\n);\r\n\r\nconst commentSlice = createSlice({\r\n  name: \"comments\",\r\n  initialState: { byPost: {}, loading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchCommentsByPost.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchCommentsByPost.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.byPost[action.payload.postId] = action.payload.comments;\r\n      })\r\n      .addCase(fetchCommentsByPost.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(addComment.fulfilled, (state, action) => {\r\n        const { postId, comment } = action.payload;\r\n        if (!state.byPost[postId]) state.byPost[postId] = [];\r\n        state.byPost[postId].unshift(comment);\r\n      });\r\n  },\r\n});\r\n\r\nexport default commentSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}