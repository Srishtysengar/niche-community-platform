{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../../api/axiosInstance\";\n\n// Add or update a reaction\nexport const reactToPost = createAsyncThunk(\"reactions/reactToPost\", async ({\n  postId,\n  type\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    var _getState$auth$user;\n    const token = (_getState$auth$user = getState().auth.user) === null || _getState$auth$user === void 0 ? void 0 : _getState$auth$user.token;\n    const {\n      data\n    } = await API.post(`/reactions/${postId}`, {\n      type\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return data;\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to react\");\n  }\n});\nconst reactionSlice = createSlice({\n  name: \"reactions\",\n  initialState: {\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(reactToPost.pending, state => {\n      state.loading = true;\n    }).addCase(reactToPost.fulfilled, state => {\n      state.loading = false;\n    }).addCase(reactToPost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default reactionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","reactToPost","postId","type","getState","rejectWithValue","_getState$auth$user","token","auth","user","data","post","headers","Authorization","err","_err$response","_err$response$data","response","message","reactionSlice","name","initialState","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","action","payload","reducer"],"sources":["C:/Users/srish/OneDrive/Desktop/build project/niche-community-platform/frontend/src/features/reaction/reactionSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../../api/axiosInstance\";\r\n\r\n// Add or update a reaction\r\nexport const reactToPost = createAsyncThunk(\r\n  \"reactions/reactToPost\",\r\n  async ({ postId, type }, { getState, rejectWithValue }) => {\r\n    try {\r\n      const token = getState().auth.user?.token;\r\n      const { data } = await API.post(\r\n        `/reactions/${postId}`,\r\n        { type },\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      return data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data?.message || \"Failed to react\");\r\n    }\r\n  }\r\n);\r\n\r\nconst reactionSlice = createSlice({\r\n  name: \"reactions\",\r\n  initialState: { loading: false, error: null },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(reactToPost.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(reactToPost.fulfilled, (state) => {\r\n        state.loading = false;\r\n      })\r\n      .addCase(reactToPost.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default reactionSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,GAAG,MAAM,yBAAyB;;AAEzC;AACA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CACzC,uBAAuB,EACvB,OAAO;EAAEG,MAAM;EAAEC;AAAK,CAAC,EAAE;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EACzD,IAAI;IAAA,IAAAC,mBAAA;IACF,MAAMC,KAAK,IAAAD,mBAAA,GAAGF,QAAQ,CAAC,CAAC,CAACI,IAAI,CAACC,IAAI,cAAAH,mBAAA,uBAApBA,mBAAA,CAAsBC,KAAK;IACzC,MAAM;MAAEG;IAAK,CAAC,GAAG,MAAMV,GAAG,CAACW,IAAI,CAC7B,cAAcT,MAAM,EAAE,EACtB;MAAEC;IAAK,CAAC,EACR;MAAES,OAAO,EAAE;QAAEC,aAAa,EAAE,UAAUN,KAAK;MAAG;IAAE,CAClD,CAAC;IACD,OAAOG,IAAI;EACb,CAAC,CAAC,OAAOI,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACZ,OAAOX,eAAe,CAAC,EAAAU,aAAA,GAAAD,GAAG,CAACG,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcL,IAAI,cAAAM,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,iBAAiB,CAAC;EAC1E;AACF,CACF,CAAC;AAED,MAAMC,aAAa,GAAGrB,WAAW,CAAC;EAChCsB,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE;IAAEC,OAAO,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAK,CAAC;EAC7CC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC1B,WAAW,CAAC2B,OAAO,EAAGC,KAAK,IAAK;MACvCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAAC1B,WAAW,CAAC6B,SAAS,EAAGD,KAAK,IAAK;MACzCA,KAAK,CAACP,OAAO,GAAG,KAAK;IACvB,CAAC,CAAC,CACDK,OAAO,CAAC1B,WAAW,CAAC8B,QAAQ,EAAE,CAACF,KAAK,EAAEG,MAAM,KAAK;MAChDH,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGS,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,aAAa,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}