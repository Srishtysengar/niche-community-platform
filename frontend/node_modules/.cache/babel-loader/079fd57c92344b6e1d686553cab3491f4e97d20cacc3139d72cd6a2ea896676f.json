{"ast":null,"code":"// src/features/reaction/reactionSlice.js\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../../api/axiosInstance\";\n\n// Add or update a reaction\nexport const reactToPost = createAsyncThunk(\"reactions/reactToPost\", async ({\n  postId,\n  type\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    var _getState$auth$user;\n    const token = (_getState$auth$user = getState().auth.user) === null || _getState$auth$user === void 0 ? void 0 : _getState$auth$user.token;\n    const {\n      data\n    } = await API.post(\"/reactions\",\n    // ✅ backend expects POST /api/reactions\n    {\n      postId,\n      type\n    },\n    // ✅ send postId + type in body\n    {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      postId,\n      reaction: data\n    };\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to react to post\");\n  }\n});\n\n// ✅ Fetch reactions for a post\nexport const fetchReactionsForPost = createAsyncThunk(\"reactions/fetchReactionsForPost\", async (postId, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    var _getState$auth$user2;\n    const token = (_getState$auth$user2 = getState().auth.user) === null || _getState$auth$user2 === void 0 ? void 0 : _getState$auth$user2.token;\n    const {\n      data\n    } = await API.get(`/reactions/${postId}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return {\n      postId,\n      reactions: data\n    };\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to fetch reactions\");\n  }\n});\nconst reactionSlice = createSlice({\n  name: \"reactions\",\n  initialState: {\n    byPost: {},\n    // { postId: [ {user, type}, ... ] }\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // React to post\n    .addCase(reactToPost.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(reactToPost.fulfilled, (state, action) => {\n      state.loading = false;\n      const {\n        postId,\n        reaction\n      } = action.payload;\n      if (!state.byPost[postId]) state.byPost[postId] = [];\n      // ✅ update or add reaction for the user\n      const idx = state.byPost[postId].findIndex(r => r.user === reaction.user);\n      if (idx !== -1) {\n        state.byPost[postId][idx] = reaction;\n      } else {\n        state.byPost[postId].push(reaction);\n      }\n    }).addCase(reactToPost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Fetch reactions\n    .addCase(fetchReactionsForPost.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchReactionsForPost.fulfilled, (state, action) => {\n      state.loading = false;\n      state.byPost[action.payload.postId] = action.payload.reactions;\n    }).addCase(fetchReactionsForPost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default reactionSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","reactToPost","postId","type","getState","rejectWithValue","_getState$auth$user","token","auth","user","data","post","headers","Authorization","reaction","err","_err$response","_err$response$data","response","message","fetchReactionsForPost","_getState$auth$user2","get","reactions","_err$response2","_err$response2$data","reactionSlice","name","initialState","byPost","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","idx","findIndex","r","push","rejected","reducer"],"sources":["C:/Users/srish/OneDrive/Desktop/build project/niche-community-platform/frontend/src/features/reaction/reactionSlice.js"],"sourcesContent":["// src/features/reaction/reactionSlice.js\r\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../../api/axiosInstance\";\r\n\r\n// Add or update a reaction\r\nexport const reactToPost = createAsyncThunk(\r\n  \"reactions/reactToPost\",\r\n  async ({ postId, type }, { getState, rejectWithValue }) => {\r\n    try {\r\n      const token = getState().auth.user?.token;\r\n      const { data } = await API.post(\r\n        \"/reactions\", // ✅ backend expects POST /api/reactions\r\n        { postId, type }, // ✅ send postId + type in body\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      return { postId, reaction: data };\r\n    } catch (err) {\r\n      return rejectWithValue(\r\n        err.response?.data?.message || \"Failed to react to post\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n// ✅ Fetch reactions for a post\r\nexport const fetchReactionsForPost = createAsyncThunk(\r\n  \"reactions/fetchReactionsForPost\",\r\n  async (postId, { getState, rejectWithValue }) => {\r\n    try {\r\n      const token = getState().auth.user?.token;\r\n      const { data } = await API.get(`/reactions/${postId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      });\r\n      return { postId, reactions: data };\r\n    } catch (err) {\r\n      return rejectWithValue(\r\n        err.response?.data?.message || \"Failed to fetch reactions\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst reactionSlice = createSlice({\r\n  name: \"reactions\",\r\n  initialState: {\r\n    byPost: {}, // { postId: [ {user, type}, ... ] }\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // React to post\r\n      .addCase(reactToPost.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(reactToPost.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        const { postId, reaction } = action.payload;\r\n        if (!state.byPost[postId]) state.byPost[postId] = [];\r\n        // ✅ update or add reaction for the user\r\n        const idx = state.byPost[postId].findIndex(\r\n          (r) => r.user === reaction.user\r\n        );\r\n        if (idx !== -1) {\r\n          state.byPost[postId][idx] = reaction;\r\n        } else {\r\n          state.byPost[postId].push(reaction);\r\n        }\r\n      })\r\n      .addCase(reactToPost.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Fetch reactions\r\n      .addCase(fetchReactionsForPost.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchReactionsForPost.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.byPost[action.payload.postId] = action.payload.reactions;\r\n      })\r\n      .addCase(fetchReactionsForPost.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default reactionSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}