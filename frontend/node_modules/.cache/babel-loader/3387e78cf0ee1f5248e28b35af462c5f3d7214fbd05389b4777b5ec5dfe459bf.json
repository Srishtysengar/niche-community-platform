{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport API from \"../../api/axiosInstance\";\n\n// --------------------\n// Fetch posts by community\n// --------------------\nexport const fetchPostsByCommunity = createAsyncThunk(\"post/fetchByCommunity\", async (communityId, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await API.get(`/posts/${communityId}`);\n    return data; // array of posts\n  } catch (err) {\n    var _err$response, _err$response$data;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to fetch posts\");\n  }\n});\n\n//crete new \nexport const createPost = createAsyncThunk(\"post/create\", async (formData, {\n  rejectWithValue\n}) => {\n  try {\n    const {\n      data\n    } = await API.post(\"/posts\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return data; // new post object\n  } catch (err) {\n    var _err$response2, _err$response2$data;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to create post\");\n  }\n});\n\n//slice\nconst postSlice = createSlice({\n  name: \"post\",\n  initialState: {\n    posts: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // Fetch posts\n    .addCase(fetchPostsByCommunity.pending, state => {\n      state.loading = true;\n    }).addCase(fetchPostsByCommunity.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    }).addCase(fetchPostsByCommunity.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Create post\n    .addCase(createPost.pending, state => {\n      state.loading = true;\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.loading = false;\n      // Add new post to the top of the list\n      state.posts.unshift(action.payload);\n    }).addCase(createPost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","API","fetchPostsByCommunity","communityId","rejectWithValue","data","get","err","_err$response","_err$response$data","response","message","createPost","formData","post","headers","_err$response2","_err$response2$data","postSlice","name","initialState","posts","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","unshift","reducer"],"sources":["C:/Users/srish/OneDrive/Desktop/build project/niche-community-platform/frontend/src/features/post/postSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport API from \"../../api/axiosInstance\";\r\n\r\n// --------------------\r\n// Fetch posts by community\r\n// --------------------\r\nexport const fetchPostsByCommunity = createAsyncThunk(\r\n  \"post/fetchByCommunity\",\r\n  async (communityId, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await API.get(`/posts/${communityId}`);\r\n      return data; // array of posts\r\n    } catch (err) {\r\n      return rejectWithValue(\r\n        err.response?.data?.message || \"Failed to fetch posts\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n//crete new \r\nexport const createPost = createAsyncThunk(\r\n  \"post/create\",\r\n  async (formData, { rejectWithValue }) => {\r\n    try {\r\n      const { data } = await API.post(\"/posts\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n      return data; // new post object\r\n    } catch (err) {\r\n      return rejectWithValue(\r\n        err.response?.data?.message || \"Failed to create post\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\n//slice\r\nconst postSlice = createSlice({\r\n  name: \"post\",\r\n  initialState: {\r\n    posts: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Fetch posts\r\n      .addCase(fetchPostsByCommunity.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchPostsByCommunity.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.posts = action.payload;\r\n      })\r\n      .addCase(fetchPostsByCommunity.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // Create post\r\n      .addCase(createPost.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(createPost.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        // Add new post to the top of the list\r\n        state.posts.unshift(action.payload);\r\n      })\r\n      .addCase(createPost.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default postSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}